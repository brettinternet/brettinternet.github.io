<feed xmlns="http://www.w3.org/2005/Atom"><title>brett.cloud</title><link rel="self" href="https://brett.cloud/"/><updated>2023-01-13T00:00:00+0000</updated><author><name>Brett Gardiner</name><email>hi@[domain]</email><uri>https://brett.cloud/</uri></author><id>https://brett.cloud/</id><entry><title>You should self-host</title><link rel="alternate" href="https://brett.cloud/self-hosted/"/><id>https://brett.cloud/self-hosted/</id><published>2023-01-13T00:00:00+0000</published><updated>2023-01-13T00:00:00+0000</updated><summary>Self-hosting is a satisfying hobby with a plethora of utility for those willing to try it out. My own homelab has become a severely overkill, but it&amp;rsquo;s not required to take self-hosting that far. You can securely host applications with a cheap desktop in your home with minimal effort. However, I find that this hobby has become an excellent way to prototype and try new technologies out.
Demo I&amp;rsquo;ve set up a simple demo to host an application.</summary><content type="html">&lt;p>Self-hosting is a satisfying hobby with a plethora of utility for those willing
to try it out. My own &lt;a href="/homelab">homelab&lt;/a> has become a severely overkill, but
it&amp;rsquo;s not required to take self-hosting that far. You can securely host
applications with a cheap desktop in your home with minimal effort. However, I
find that this hobby has become an excellent way to prototype and try new
technologies out.&lt;/p>
&lt;h2 id="demo">Demo&lt;/h2>
&lt;p>I&amp;rsquo;ve set up a
&lt;a href="https://github.com/brettinternet/docker-compose-hosted-demo">simple demo to host an application&lt;/a>.&lt;/p>
&lt;p>Docker compose offers a very simple way to run and maintain self-hosted homelab.
As demonstrated here, tooling available makes automation and setup very easy.&lt;/p>
&lt;p>This demo hosts a simple Elixir notebook application called Livebook. I work in
an Elixir shop where Livebook is a local favorite. Livebook is a similar to
Python&amp;rsquo;s Jupyter except it&amp;rsquo;s built with Elixir and has real-time syncing between
clients because it&amp;rsquo;s built on the Phoenix framework&amp;rsquo;s library
&lt;a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html">LiveView&lt;/a>.&lt;/p>
&lt;p>This demo is for a single-node homelab using docker-compose to orchestrate a
Cloudflared tunnel connection, a Traefik reverse proxy and the Livebook app.
Cloudflare DNS is automated with CNAME creation from Traefik routes.&lt;/p>
&lt;p>There&amp;rsquo;s no port forwarding required.&lt;/p>
&lt;pre class="mermaid">graph TB
tf(Terraform) -.- dns
tf -.- argo
dns{Cloudflare DNS} --> argo
argo((Cloudflare Tunnels)) == Tunnel ==> cloudflared
ddns -.- dns
subgraph lan[Docker Network]
style lan stroke-dasharray: 5 5
cloudflared --> traefik[Traefik reverse proxy]
traefik --> livebook[Livebook]
ddns[cloudflare-companion] -. service discovery .- livebook
end
&lt;/pre>
&lt;figure>
&lt;figcaption>Mermaidjs diagram of the architecture&lt;/figcaption>
&lt;/figure>
&lt;p>The phony make targets below are used to simplify each step. Look at the
&lt;a href="./Makefile">Makefile&lt;/a> to see what each one does.&lt;/p>
&lt;p>First, initialize the config file and terraform project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>make setup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This creates a &lt;code>.env&lt;/code> file which you should edit with your own secrets.
&lt;code>CLOUDFLARE_API_TOKEN&lt;/code> needs Zone.DNS and Account.Cloudflare Tunnel write
permissions for the domain in use. Use an API token, not an API key. The value
for &lt;code>CLOUDFLARE_TUNNEL_TOKEN&lt;/code> will come later.&lt;/p>
&lt;p>Then, create the Cloudflared tunnel. You&amp;rsquo;ll need Terraform, unless you create it
from the &lt;a href="https://one.dash.cloudflare.com/">Cloudflare Zero Trust dashboard&lt;/a>.
Note, using the dashboard setup, point the tunnel endpoint to
&lt;code>http://traefik:80&lt;/code> as the cloudflared image sees the host within the docker
network.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>make terraform
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This plans and applies the terraform tunnel configuration. It creates a CNAME
record tunnel.example.com that points to the Cloudflared tunnel URL.&lt;/p>
&lt;p>Find the &lt;code>tunnel_token&lt;/code> value in the terraform output file
&lt;code>./tunnel/terraform.tfstate&lt;/code> and add it as the value of
&lt;code>CLOUDFLARE_TUNNEL_TOKEN&lt;/code>.&lt;/p>
&lt;h2 id="run">Run&lt;/h2>
&lt;p>Start the docker compose.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>make start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This runs &lt;code>docker-compose --compatibility up&lt;/code>. The compatibility flag appears to
be required in order to
&lt;a href="https://github.com/docker/compose/issues/4513">set resource limits in docker-compose&lt;/a>.&lt;/p></content></entry><entry><title>Homelab</title><link rel="alternate" href="https://brett.cloud/homelab/"/><id>https://brett.cloud/homelab/</id><published>2022-11-02T00:00:00+0000</published><updated>2022-11-02T00:00:00+0000</updated><summary>Don&amp;rsquo;t be fooled, having a home server is really just hundreds of hours of badblocks.
I&amp;rsquo;ve been hard at work recently converting my architecture to support orchestrated deployments with multiple nodes. I haven&amp;rsquo;t quite achieved high-availability, and I&amp;rsquo;m not likely to take things that far. However, it has been an excellent journey to become more acquainted with Kubernetes.
Setup and usage are inspired by a homelab gitops template and the k8s-at-home community.</summary><content type="html">&lt;p>Don&amp;rsquo;t be fooled, having a home server is really just hundreds of hours of
&lt;a href="https://wiki.archlinux.org/index.php/Badblocks">badblocks&lt;/a>.&lt;/p>
&lt;p>I&amp;rsquo;ve been hard at work recently converting my architecture to support
orchestrated deployments with multiple nodes. I haven&amp;rsquo;t quite achieved
high-availability, and I&amp;rsquo;m not likely to take things that far. However, it has
been an excellent journey to become more acquainted with Kubernetes.&lt;/p>
&lt;p>Setup and usage are inspired by a
&lt;a href="https://github.com/onedr0p/flux-cluster-template">homelab gitops template&lt;/a> and
the &lt;a href="https://github.com/k8s-at-home">k8s-at-home&lt;/a> community. You can find
similar setups with the
&lt;a href="https://nanne.dev/k8s-at-home-search/">k8s at home search&lt;/a>.
&lt;a href="https://github.com/brettinternet/homelab/tree/2481045c3a9a6542f10095c9550e324161394286">Historical revisions&lt;/a>
of my homelab setup had rootless Podman containers deployed with ansible as
systemd units. Prior to that, I
&lt;a href="https://github.com/brettinternet/homelab/tree/d1d2c02106e61685d38c199d5971bc383831f72d">used docker-compose&lt;/a>
to orchestrate containers on a single node.&lt;/p>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;p>Here have been some of my goals:&lt;/p>
&lt;ul>
&lt;li>Lots of
&lt;a href="https://github.com/brettinternet/homelab/blob/main/cluster/apps">self-hosted services&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://toolkit.fluxcd.io/">Flux&lt;/a> GitOps with this repository
(&lt;a href="https://github.com/brettinternet/homelab/blob/main/cluster">cluster directory&lt;/a>)&lt;/li>
&lt;li>Ansible node provisioning and
&lt;a href="https://github.com/PyratLabs/ansible-role-k3s">K3s setup&lt;/a> (Ansible
&lt;a href="https://github.com/brettinternet/homelab/blob/main/provision/ansible/roles">roles&lt;/a>
and
&lt;a href="https://github.com/brettinternet/homelab/blob/main/provision/ansible">playbooks&lt;/a>)&lt;/li>
&lt;li>Terraform DNS records
(&lt;a href="https://github.com/brettinternet/homelab/blob/main/provision/terraform">terraform&lt;/a>)&lt;/li>
&lt;li>&lt;a href="https://github.com/mozilla/sops">SOPS&lt;/a> secrets stored in Git&lt;/li>
&lt;li>&lt;a href="https://github.com/renovatebot/renovate">Renovate bot&lt;/a> dependency updates&lt;/li>
&lt;li>WireGuard VPN pod gateway via paid service&lt;/li>
&lt;li>WireGuard VPN proxy hosted on VPS&lt;/li>
&lt;li>&lt;a href="https://github.com/cloudflare/cloudflared">Cloudflared HTTP tunnel&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ori-edge/k8s_gateway">K8s gateway&lt;/a> for local DNS
resolution to cluster and
&lt;a href="https://kubernetes.github.io/ingress-nginx/">NGINX ingress controller&lt;/a>&lt;/li>
&lt;li>Both internal &amp;amp; external services with a service
&lt;a href="https://github.com/ori-edge/k8s_gateway/">gateway&lt;/a>&lt;/li>
&lt;li>OIDC
&lt;a href="https://www.authelia.com/configuration/identity-providers/open-id-connect/">authentication&lt;/a>
with &lt;a href="https://github.com/nitnelave/lldap">LDAP&lt;/a>&lt;/li>
&lt;li>Automatic Cloudflare DNS updates
(&lt;a href="https://github.com/brettinternet/homelab/blob/main/cluster/apps/networking/cloudflare-ddns">ddns cronjob&lt;/a>)&lt;/li>
&lt;li>&lt;a href="https://metallb.universe.tf/">MetalLB&lt;/a> bare metal K8s network loadbalancing&lt;/li>
&lt;li>&lt;a href="https://www.tigera.io/project-calico/">Calico&lt;/a> CNI&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/index.php/ZFS">ZFS&lt;/a>&lt;/li>
&lt;li>JBOD &lt;a href="https://github.com/trapexit/mergerfs">mergerfs&lt;/a> union NFS with
&lt;a href="https://www.snapraid.it">SnapRAID&lt;/a> backup for low-touch media files
(&lt;a href="https://github.com/brettinternet/homelab/blob/main/cluster/apps/media/snapraid-runner">snapraid-runner cluster cronjob&lt;/a>)&lt;/li>
&lt;li>&lt;a href="https://restic.net">Restic&lt;/a> backups to remote and local buckets
(&lt;a href="https://github.com/brettinternet/homelab/blob/main/cluster/apps/backup">backup namespace&lt;/a>)&lt;/li>
&lt;li>&lt;a href="https://taskfile.dev">go-task&lt;/a> shorthand for useful commands
(&lt;a href="https://github.com/brettinternet/homelab/blob/main/Taskfile.yaml">Taskfile&lt;/a>
and
&lt;a href="https://github.com/brettinternet/homelab/blob/main/.taskfiles">taskfiles&lt;/a>)&lt;/li>
&lt;/ul>
&lt;h3 id="some-questions">Some questions&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://danluu.com/why-ecc/">Why use ECC RAM?&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://news.ycombinator.com/item?id=14206635">Hacker News discussion&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://arstechnica.com/civis/threads/ars-walkthrough-using-the-zfs-next-gen-filesystem-on-linux.1235679/#p26303271">If you love your data, use ECC RAM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/ECC_memory#Description">Error rates increase rapidly with rising altitude&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="hardware">Hardware&lt;/h2>
&lt;p>I finally upgraded my media server chassis to a
&lt;a href="https://www.techyparts.com/supermicro-cse-826be16-r1k28lpb-2u-server-chassis-2x1280w-12x3-5-bpn-sas2-826el1.html">Supermicro CSE-826&lt;/a>.
For almost 7 years I was using a
&lt;a href="https://www.fractal-design.com/products/cases/node/node-804/black/">Node 804&lt;/a>,
which is popular among hobbyists because it fits 8x 3.5&amp;quot; drivers. I use old
desktop hardware for this NAS and other nodes.&lt;/p>
&lt;p>I used a widely-known and inexpensive method to add additional SATA storage via
a Host Bus Adapter (HBA). I purchased a
&lt;a href="https://www.ebay.com/sch/i.html?_nkw=Dell+Perc+H310+SATA">Dell Perc H310&lt;/a> a
long while back. Mine did come from overseas, but it turned out to be legit.
&lt;a href="https://www.youtube.com/watch?v=EOcpp-GdhKo">This video&lt;/a> shows how it can be
flashed to an LSI 9211-8i IT (it&amp;rsquo;s called IT mode; see also
&lt;a href="https://www.servethehome.com/ibm-serveraid-m1015-part-4/">1&lt;/a>,
&lt;a href="https://www.truenas.com/community/threads/confused-about-that-lsi-card-join-the-crowd.11901/">2&lt;/a>).&lt;/p>
&lt;p>Here are other recommended
&lt;a href="https://www.reddit.com/r/DataHoarder/wiki/hardware#wiki_controllers">controllers&lt;/a>.&lt;/p></content></entry><entry><title>Dotfiles</title><link rel="alternate" href="https://brett.cloud/dotfiles/"/><id>https://brett.cloud/dotfiles/</id><published>2021-10-27T00:00:00+0000</published><updated>2021-10-27T00:00:00+0000</updated><summary>My dotfiles are easy to setup for both desktop consoles and headless servers. I use Make, bash scripts and dotbot, an idempotent python script which configures directories, creates symlinks and run postscripts for Linux and macOS. I&amp;rsquo;ve broken the dotbot configuration out into multiple modules to select features suited for different environments.
I&amp;rsquo;ve simplifed my nvim and emacs configurations by just using Astronvim and Doom respectively. While I love i3, I&amp;rsquo;m in the process of configuring Sway to see if I can match my productivity on Wayland.</summary><content type="html">&lt;p>My &lt;a href="https://github.com/brettinternet/dotfiles">dotfiles&lt;/a> are easy to setup for
both desktop consoles and headless servers. I use Make, bash scripts and
&lt;a href="https://github.com/anishathalye/dotbot">dotbot&lt;/a>, an idempotent python script
which configures directories, creates symlinks and run postscripts for Linux and
macOS. I&amp;rsquo;ve broken the dotbot configuration out into multiple modules to select
features suited for different environments.&lt;/p>
&lt;p>I&amp;rsquo;ve simplifed my nvim and emacs configurations by just using Astronvim and Doom
respectively. While I love &lt;a href="https://i3wm.org/">i3&lt;/a>, I&amp;rsquo;m in the process of
configuring &lt;a href="https://swaywm.org/">Sway&lt;/a> to see if I can match my productivity on
Wayland.&lt;/p></content></entry><entry><title>Elbakyan is a heroine for modern science</title><link rel="alternate" href="https://brett.cloud/scihub/"/><id>https://brett.cloud/scihub/</id><published>2018-02-09T00:00:00+0000</published><updated>2018-02-09T00:00:00+0000</updated><summary>A popular article was recently published about the history of Alexandra Elbakyan&amp;rsquo;s Sci-Hub, a website that makes academic journal papers free to everyone. It&amp;rsquo;s a controversial topic following last year&amp;rsquo;s civil litigation by two major publishers, Elsevier and the American Chemical Society. Most recently, Cloudfare responded to the court&amp;rsquo;s injunction by terminating service to Sci-Hub&amp;rsquo;s domains (this brings up additional ethical concern). Meanwhile, Sci-Hub dances away out of reach by staying available on other domain names inaccessible to the US without a VPN.</summary><content type="html">&lt;p>A popular
&lt;a href="https://www.theverge.com/2018/2/8/16985666/alexandra-elbakyan-sci-hub-open-access-science-papers-lawsuit">article&lt;/a>
was recently published about the history of Alexandra Elbakyan&amp;rsquo;s Sci-Hub, a
website that makes academic journal papers free to everyone. It&amp;rsquo;s a
controversial topic following last year&amp;rsquo;s civil litigation by two major
publishers, Elsevier and the American Chemical Society. Most recently, Cloudfare
responded to the court&amp;rsquo;s injunction by
&lt;a href="https://twitter.com/Sci_Hub/status/959702088543539200">terminating service&lt;/a> to
Sci-Hub&amp;rsquo;s domains
(&lt;a href="https://torrentfreak.com/cloudflare-terminates-service-to-sci-hub-domain-names-180205/">this&lt;/a>
brings up additional ethical concern). Meanwhile, Sci-Hub dances away out of
reach by staying available on other domain names inaccessible to the US without
a VPN.&lt;/p>
&lt;p>Alexandra has become somewhat of a Martin Luther of science. Except her
&lt;em>Ninety-five Theses&lt;/em> is instead a database of 64 million academic papers in PDF.
Her work makes science more accessible to the laity, instead of a submission to
the interpretation and approval of academics from high-status institutions. My
own Bachelor of Science makes me nervous about the implications of lay folk
making decisions based on studies perused without understanding rigorous
philosophies of science. However, this is an unavoidable aspect already being
carried out by the shallow community of anti-science, FDA-approved pill pushers
and social influencers with their online degrees and beauty blogs. But imagine a
different scene of coffee shop discussions of fruit fly sleep cycles or dinner
table deliberation over neuronal action potential.&lt;/p>
&lt;p>Paywalls and walled gardens for publications with insurmountable price tags make
learning an exclusive, invite-only process for elite institutions. The effects
of Reverend Luther&amp;rsquo;s translations of the bible to the German vernacular had
tremendous impact on both religious &lt;em>and&lt;/em> cultural contexts. With Sci-Hub making
scientific studies more widely available, I wonder if these academic papers
could receive the same widespread scrutiny that open source code receives from
the software community. Even rigorous disciplines receive contributions from
amateur enthusiasts, like the hobbyist who recently
&lt;a href="https://skyriddles.wordpress.com/2018/01/21/nasas-long-dead-image-satellite-is-alive/">found NASA&amp;rsquo;s lost satellite&lt;/a>.&lt;/p>
&lt;p>I am convinced that this is not primarily an economic issue but a moral one.
While we&amp;rsquo;re bombarded with an endless stream of media in this digital era (like
a
&lt;a href="http://nautil.us/issue/52/the-hive/modern-media-is-a-dos-attack-on-your-free-will">DoS attack on our attention&lt;/a>),
what effect would open discussions of empirical sources have on the quality of
our media consumption, and even the advancement of our society? This is all a
bit idealistic, but imagine this: a new generation of young scientists with the
democratization of evidence-based persuasion. Taxpayers should have access to
the research they paid for. Publishers hoard and monetize public research, but
hopefully not for long.&lt;/p></content></entry><entry><title>Building a Hackintosh</title><link rel="alternate" href="https://brett.cloud/hackintosh/"/><id>https://brett.cloud/hackintosh/</id><published>2017-04-23T00:00:00+0000</published><updated>2017-04-23T00:00:00+0000</updated><summary>Apple&amp;rsquo;s overpriced offering is moving away from modular, upgradable hardware. Some recent unveils of the iMac, Mac Pro, and MacBook Pro failed to meet the expectations of many professionals that demand improved specifications. Using the more powerful hardware available with macOS can be the ultimate environment for a developer—Unix coupled with strong machinery. For example, at the time of writing this, I&amp;rsquo;m on my Kaby Lake build, but current Apple hardware doesn&amp;rsquo;t offer the newest Intel generation.</summary><content type="html">&lt;p>Apple&amp;rsquo;s overpriced offering is moving away from modular, upgradable hardware.
Some recent unveils of the iMac, Mac Pro, and MacBook Pro failed to meet the
expectations of many professionals that demand improved specifications. Using
the more powerful hardware available with macOS can be the ultimate environment
for a developer—Unix coupled with strong machinery. For example, at the time of
writing this, I&amp;rsquo;m on my Kaby Lake build, but current Apple hardware doesn&amp;rsquo;t
offer the newest Intel generation. This is currently experimental in the
community, but more stable options do exist with Skylake hardware.&lt;/p>
&lt;p>I first started developing on a MacBook. There are aspects of Apple&amp;rsquo;s laptops
that other hardware manufactures have not been able to match for me quite yet.
But as for a desktop where form factor, sleek aluminum design, and the
responsive trackpad are not concerns, then a Hackintosh is the way to go for
tabletop computing.&lt;/p>
&lt;p>Should you build a hackintosh? Probably not. It&amp;rsquo;s a breach of Apple&amp;rsquo;s macOS
Terms and Conditions and they
&lt;a href="https://en.wikipedia.org/wiki/Psystar_Corporation">have sued companies&lt;/a> that
attempt to turn a profit. However, Apple has been kind and
&lt;a href="https://www.reddit.com/r/hackintosh/comments/2ek35g/is_it_technically_illegal/">hasn&amp;rsquo;t litigated individuals&lt;/a>.
Building a Hackintosh involves a &lt;em>lot&lt;/em> of troubleshooting and tinkering. But if
you&amp;rsquo;re okay with all of this, then try it out! The first place to start is to
begin lurking in the community
(&lt;a href="https://reddit.com/r/hackintosh">/r/hackintosh&lt;/a>).&lt;/p>
&lt;p>I&amp;rsquo;ve posted a
&lt;a href="https://github.com/brettinternet/hackintosh/blob/8788216554bf169d0f7eff2581ab372e14ce3b2b/docs/setup.md">guide to my most recent build&lt;/a>
where I use the latest Kaby Lake Intel processor and the latest mobo. I use an
NVMe SSD, bluetooth accessories, iMessage, and other necessary features. My
passion for Hackintosh fluctuates with my availability, but you can see my
builds, guides and troubleshooting research at
&lt;a href="https://github.com/brettinternet/hackintosh">brettinternet/hackintosh&lt;/a>.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Feb 2019 update&lt;/strong>: Proprietary software can be frustrating and in privacy
matters and developer support Apple appears to be straying further from the
light. I&amp;rsquo;ve archived my personal Hackintosh project and moved on to
&lt;a href="https://github.com/brettinternet/linux">Linux&lt;/a>.&lt;/p></content></entry><entry><title>Manage notes with markdown and git</title><link rel="alternate" href="https://brett.cloud/notes/"/><id>https://brett.cloud/notes/</id><published>2017-02-06T00:00:00+0000</published><updated>2017-02-06T00:00:00+0000</updated><summary>In school, to keep up with my peers, I took meticulous notes. I read and reread assignments, and I constantly evaluated my priorities to stay on task. I became obsessed with managing my productivity. I&amp;rsquo;ve used feature-rich apps like OmniFocus or Wunderlist and simpler tools like Apple Reminders.
For a while I used Evernote for note-taking, then I tried OneNote, Apple Notes and even Google Keep. I left Evernote because they&amp;rsquo;d seemed to have lost their way with gimmicky features.</summary><content type="html">&lt;p>In school, to keep up with my peers, I took meticulous notes. I read and reread
assignments, and I constantly evaluated my priorities to stay on task. I became
obsessed with managing my productivity. I&amp;rsquo;ve used feature-rich apps like
OmniFocus or Wunderlist and simpler tools like Apple Reminders.&lt;/p>
&lt;p>For a while I used Evernote for note-taking, then I tried OneNote, Apple Notes
and even Google Keep. I left Evernote because they&amp;rsquo;d seemed to have lost their
way with gimmicky features. I liked that OneNote didn&amp;rsquo;t force-feed a premium
option and it was just as accessible as Evernote. Later, I thought that maybe
Apple Notes would be just enough for me, but I eventually found that it wasn&amp;rsquo;t
better for anything other than lists or using the touch draw feature.&lt;/p>
&lt;p>Now as a developer, I use markdown in my text editor. This process for
note-taking certainly isn&amp;rsquo;t novel – you&amp;rsquo;ll even find books on GitHub written
with markdown. Markdown offers the most formatting versatility, especially to
display code excerpts with syntax highlighting and quickly reference links,
create lists, and break notes out by sections. This is especially true since
&lt;a href="https://github.github.com/gfm/">GitHub&amp;rsquo;s flavoring&lt;/a> and small enhancements have
made markdown previewing so accessible. Even this blog is made using markdown.&lt;/p>
&lt;h3 id="markdown">Markdown&lt;/h3>
&lt;p>I love markdown. I like how widely support it is, and I like how clear markdown
format is to convey information. Markdown has become the ubiquitous plain text
format for the GitHub community. My own blog posts are written in markdown
(&lt;a href="https://github.com/brettinternet/brettinternet.github.io/">brettinternet.github.io&lt;/a>).
Composing markdown is a timeless method that isn&amp;rsquo;t married any third party tools
except a modern text editor (which isn&amp;rsquo;t going anywhere).&lt;/p>
&lt;p>It&amp;rsquo;s true, this method isn&amp;rsquo;t perfect. I need separate tools for sketches and PDF
markups. But these mediums make up about 0.5% of all my notes. I just use my
NextCloud for storing files or Keybase for my public documents.&lt;/p>
&lt;p>&lt;a href="https://githubengineering.com/a-formal-spec-for-github-markdown/">Some recent specification&lt;/a>
has been proposed to standardize Github&amp;rsquo;s flavor of markdown. One of my favorite
introductions to markdown can be found &lt;a href="http://commonmark.org/">here&lt;/a>.
Commonmark was put together by a few representatives of some major companies
that use markdown like GitHub, Reddit, and Stack Exchange. Some nonconforming
markdown features have added some very nice features such as task lists,
autolinking, diff and code block improvements.&lt;/p>
&lt;h3 id="git">Git&lt;/h3>
&lt;p>Right now I have a &lt;del>BitBucket&lt;/del> separate GitHub repo for my private notes and
another for my &lt;a href="https://github.com/brettinternet/public-notes">public notes&lt;/a>.
Eventually, I&amp;rsquo;d like to self-host my own GitLab within
&lt;a href="https://github.com/brettinternet/homelab">my homelab&lt;/a>.&lt;/p>
&lt;p>My commit messages are short, but I attempt to make them meaningful so I can see
my note history and refer back to find deleted excerpts. I also use
&lt;a href="https://github.com/brettinternet/dotfiles/blob/master/.aliases">aliases&lt;/a> for
git commands to make pushing to master very fast.&lt;/p>
&lt;h3 id="desktop">Desktop&lt;/h3>
&lt;p>I use Vim and VS Code. To me, taking notes in my editor environment is the best
possible scenario since I&amp;rsquo;m most comfortable with the shortcuts. VS Code offers
a markdown previewer out of the box with &lt;code>ctrl&lt;/code> + &lt;code>shift&lt;/code> + &lt;code>v&lt;/code>. Markdown&amp;rsquo;s
lifespan on desktop will exceed my own, so I&amp;rsquo;m no longer bound to an app&amp;rsquo;s
survival on a platform to access my notes.&lt;/p>
&lt;p>&lt;a href="https://github.com/ShareX/ShareX">ShareX&lt;/a> is a good option for screenshots on
PC or &lt;a href="https://wiki.archlinux.org/index.php/Flameshot">Flameshot&lt;/a> or
&lt;a href="https://www.gimp.org/downloads/">GIMP&lt;/a> on Linux. I tend to think that a simple
bookmark is better than web clippings. EverNote certainly has the strongest
clipper, and I do like that OneNote&amp;rsquo;s web clipper is
&lt;a href="https://blogs.msdn.microsoft.com/onenotedev/2016/08/31/the-web-clipper-goes-open-source/">open source&lt;/a>.&lt;/p>
&lt;h3 id="mobile">Mobile&lt;/h3>
&lt;p>Before I found &lt;a href="https://workingcopyapp.com/">Working Copy&lt;/a>, a solid mobile git
solution for iOS was &lt;em>the&lt;/em> missing piece for keeping notes in a git repository.
I&amp;rsquo;m sure there are equally polished options on Android. With Working Copy you
can fetch repos for free, but you&amp;rsquo;ll have to pay to unlock push. The app is very
polished, so I think it&amp;rsquo;s worth it to support this developer. SSH keys are
supported, language highlighting and markdown and plain text previews. It&amp;rsquo;s an
excellent mobile option for iOS.&lt;/p>
&lt;h3 id="save-menu">Save Menu&lt;/h3>
&lt;blockquote>
&lt;p>Everything not saved will be lost.&lt;/p>
&lt;p>- &lt;em>Nintendo &amp;ldquo;Quit Screen&amp;rdquo; message&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;p>Like an accessible save menu, I keep everything in markdown. I record docker
commands and obscure command-line arguments, JavaScript toy problems, or
directions to setup Postgres permissions. I also
&lt;a href="https://github.com/brettinternet/hugo-slides">create slides&lt;/a> with markdown.
I&amp;rsquo;ll only make a note of something if it&amp;rsquo;s easier to reference my notes than it
is to &lt;a href="/blog/becoming-a-professional-googler">Google search it&lt;/a>. I also take
notes to help out the students that I mentor. You can checkout my
&lt;a href="https://github.com/brettinternet/public-notes">public notes&lt;/a> on GitHub but you
can&amp;rsquo;t see my private ones 😉.&lt;/p>
&lt;p>I use a combination of Apple Reminders and private GitHub issues with task lists
for short term personal tasks, and GitHub Projects to visualize Kanban project
and portfolio management. But for notes, I like good ol&amp;rsquo; fashioned git and
markdown. I use a private repository for my personal notes, and a separate repo
for my public notes. I believe this method is the strongest embrace of
trustworthy technology. Git and markdown are two timeless tools that are sure to
be around for a long time.&lt;/p>
&lt;hr>
&lt;!-- raw HTML omitted -->
&lt;p>&lt;strong>June 2020 update&lt;/strong>: As of this year, I have begun experimenting with a much
simpler approach for tracking work-in-progress: &lt;code>todo.txt&lt;/code>. More on this to
come.&lt;/p>
&lt;!-- raw HTML omitted --></content></entry><entry><title>About me</title><link rel="alternate" href="https://brett.cloud/about/"/><id>https://brett.cloud/about/</id><published>0001-01-01T00:00:00+0000</published><updated>0001-01-01T00:00:00+0000</updated><summary>code with me recruit me work with me Brett Gardiner is passionate about delivering working software solutions that customers love. He enjoys long walks in the server room and warming his hands by the mainframe. In the evenings, you'll find Brett tinkering with different technologies to expand and grow his interests. GitHub Twitter LinkedIn What do I like? I like my family, pizza, Linux, Costco, spinach but not arugula, dewy Rocky Mountain air in the morning, everything bagels, and Baja Blast Zero.</summary><content type="html">&lt;div class="not-prose flex flex-col items-center justify-center container mb-12 mx-auto">
&lt;a href="/">
&lt;figure>
&lt;img
src="/about/profile_huaf3b1c68cdfb21964fe3fd101426907a_6957625_120x0_resize_lanczos_3.png"
class="rounded-full border-4 border-solid border-slate-900 bg-slate-900 mx-auto"
/>
&lt;/figure>
&lt;/a>
&lt;/div>
&lt;ul class="not-prose list-none p-0 mx-0 my-6 font-article grid xs:grid-cols-3 gap-4 content-center">
&lt;li class="text-center xs:text-left">
&lt;a href="https://github.com/brettinternet" class="underline">code with me&lt;/a>
&lt;/li>
&lt;li class="text-center xs:text-center">
&lt;a href="/recruit" class="underline">recruit me&lt;/a>
&lt;/li>
&lt;li class="text-center xs:text-right">
&lt;a href="https://linkedin.com/in/brettinternet" class="underline">work with me&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>
Brett Gardiner is passionate about delivering working software solutions that
customers love. He enjoys long walks in the server room and warming his hands by
the mainframe. In the evenings, you'll find Brett tinkering with different technologies
to expand and grow his interests.
&lt;/p>
&lt;ul class="not-prose list-none mt-6 mb-12 p-0 mx-0 font-article grid xs:grid-cols-3 gap-4 content-center">
&lt;li class="text-center xs:text-left">
&lt;a
href="https://github.com/brettinternet"
class="inline-flex items-center no-underline gap-2 group"
target="_blank"
rel="noopener noreferrer"
w
>
&lt;svg
class="w-4 h-4"
xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"
stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
>
&lt;path
d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22">&lt;/path>
&lt;/svg>
&lt;span class="group-hover:underline">GitHub&lt;/span>
&lt;/a>
&lt;/li>
&lt;li class="text-center xs:text-center">
&lt;a
href="https://twitter.com/brettinternet"
class="inline-flex items-center no-underline gap-2 group"
target="_blank"
rel="noopener noreferrer"
w
>
&lt;svg
class="w-4 h-4"
xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"
stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
>
&lt;path
d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z">&lt;/path>
&lt;/svg>
&lt;span class="group-hover:underline">Twitter&lt;/span>
&lt;/a>
&lt;/li>
&lt;li class="text-center xs:text-right">
&lt;a
href="https://linkedin.com/in/brettinternet"
class="inline-flex items-center no-underline gap-2 group"
target="_blank"
rel="noopener noreferrer"
w
>
&lt;svg
class="w-4 h-4"
xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none"
stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
>
&lt;path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z">&lt;/path>
&lt;rect x="2" y="9" width="4" height="12">&lt;/rect>
&lt;circle cx="4" cy="4" r="2">&lt;/circle>
&lt;/svg>
&lt;span class="group-hover:underline">LinkedIn&lt;/span>
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="px-0">
&lt;div class="grid sm:grid-cols-2 gap-4">
&lt;details open>
&lt;summary class="font-serif">What do I like?&lt;/summary>
&lt;p>I like my family, pizza, Linux, Costco, spinach but not arugula, dewy Rocky Mountain air in the morning, everything bagels, and Baja Blast Zero.&lt;/p>
&lt;/details>
&lt;details open>
&lt;summary class="font-serif">What are my hobbies?&lt;/summary>
&lt;p>I play pickleball, hike and camp. I also have numerous ongoing projects such as home automation with IoT devices, a self-hosted kubernetes homelab, custom keyboards, and programming projects.&lt;/p>
&lt;/details>
&lt;details>
&lt;summary class="font-serif">How do we get in touch?&lt;/summary>
&lt;p>Please try one of the channels linked above.&lt;br />You may also reach me at:&lt;br />&lt;code>hi@[this website's domain]&lt;/code>&lt;/p>
&lt;/details>
&lt;/div></content></entry></feed>